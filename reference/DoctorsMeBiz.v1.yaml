openapi: 3.0.0
info:
  title: DoctorsMeBizAPI
  version: '`'
  contact:
    name: アドメディカ
    url: 'http://ad-medi.com/'
    email: dmadmin@ad-medi.com
  termsOfService: 'http://ad-medi.com/'
  description: |-
    DoctorsMeの専門家に対して医療相談を行うためのAPIです。

    本APIを呼び出すには事前に共有するCLIENT_SECRET,CLIENT_IDと、以下の手順で取得するAPI_TOKENをヘッダーパラメータに指定して頂く必要があります。

    1. ユーザー企業様にて管理されているユーザーID（client_user_id）をパラメーターにユーザーサインアップAPI呼び出す
    2. 上記APIのレスポンスにて得られる、DoctorsMeBizのユーザーID/パスワードをユーザー企業様アプリケーションにて永続化する
    3. DoctorsMeBizのユーザーID/パスワードをパラメータに、ユーザーサインインAPIを呼び出す
    4. 上記APIのレスポンスにて得られるAPI_TOKEN（有効期限付き）をヘッダーパラメータに指定して、その他のAPI（相談投稿APIなど）を呼び出す


    日時フォーマット：ISO 8601
servers: []
paths:
  /qa:
    post:
      summary: 相談投稿
      tags:
        - qa
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  qa:
                    type: object
                    properties:
                      id:
                        type: string
                        example: '1'
              examples:
                example-1:
                  value:
                    qa:
                      id: '1'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      operationId: post-qa-post
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                expert_category:
                  type: string
                  description: 専門家のカテゴリー
                  enum:
                    - doctor
                    - chemist
                    - dietitian
                    - dentist
                    - pet
                user_id:
                  type: string
            examples:
              example-1:
                value:
                  content: 相談内容です
                  expert_category: doctor
                  user_id: '1'
          application/xml:
            schema:
              type: object
              properties: {}
        description: ''
      description: 相談を投稿する
      security:
        - API_TOKEN: []
        - CLIENT_SECRET: []
        - CLIENT_ID: []
    parameters: []
    get:
      summary: 相談詳細取得
      operationId: get-qa
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QaDetail'
              examples:
                example-1:
                  value:
                    id: '1'
                    created_at: '2019-08-24T14:15:22Z'
                    expert_category: doctor
                    expert:
                      id: '1'
                      nick_name: ドクターズミー専門家
                      icon_url: 'https://doctors-me.com/assets/media/icon-dietitian-69c409691f60651d21f5220c69b79bc68f0743d87086666ab2b67448929554c7.png'
                      expert_category: doctor
                    qa_message_list:
                      - id: '1'
                        content: 相談内容
                        created_at: '2019-08-24T14:15:22Z'
                        upload_image_url: 'https://doctorsme-production.s3.amazonaws.com/contents/contents/theme/thum_6555_1583732503623.png'
                        author_type: user
                    user:
                      id: '1'
                    status: '10'
          headers: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                example-1:
                  value:
                    message: 不正なリクエストフォーマットです
                    code: '1000'
                    status: '400'
          headers: {}
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples: {}
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - API_TOKEN: []
        - CLIENT_SECRET: []
        - CLIENT_ID: []
      description: 特定の相談内容を取得する。
      tags:
        - qa
      parameters:
        - schema:
            type: string
            example: '1'
          in: query
          name: qa_id
          required: true
  /qa/list:
    parameters: []
    get:
      summary: 相談履歴取得
      operationId: get-qa-list
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  qa_list:
                    type: array
                    items:
                      $ref: '#/components/schemas/Qa'
              examples:
                example-1:
                  value:
                    qa_list:
                      - id: '1'
                        created_at: '2019-08-24T14:15:22Z'
                        expert_category: doctor
                        expert:
                          id: '1'
                          nick_name: ドクターズミー専門家
                          icon_url: 'https://doctors-me.com/assets/media/icon-dietitian-69c409691f60651d21f5220c69b79bc68f0743d87086666ab2b67448929554c7.png'
                          expert_category: doctor
                        user:
                          id: '1'
                        status: '10'
                        first_qa_message:
                          id: '1'
                          content: 相談内容
                          created_at: '2019-08-24T14:15:22Z'
                          upload_image_url: 'https://doctorsme-production.s3.amazonaws.com/contents/contents/theme/thum_6555_1583732503623.png'
                          author_type: user
          headers: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - API_TOKEN: []
        - CLIENT_SECRET: []
        - CLIENT_ID: []
      description: 特定ユーザーの相談内容をすべて取得する。
      tags:
        - qa
      parameters:
        - schema:
            type: string
            example: '1'
          in: query
          name: user_id
          required: true
  /user/signup:
    parameters: []
    post:
      summary: ユーザーサインアップ
      operationId: post-user-register
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/UserSign'
              examples:
                example-1:
                  value:
                    user:
                      id: '1'
                      pass: arsocehucrsaochuras
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      description: client_user_idをパラメータに指定してユーザーを登録し、DoctorsMeBizのuser_id/passを得る。
      parameters: []
      security:
        - CLIENT_SECRET: []
        - CLIENT_ID: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                client_user_id:
                  type: string
                  description: goo_id
            examples:
              example-1:
                value:
                  client_user_id: '1'
      tags:
        - user
  /user/signin:
    post:
      summary: ユーザーサインイン
      operationId: post-user-login
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  API_TOKEN:
                    type: string
                    example: oaeuaouaouaoeuuao
                required:
                  - API_TOKEN
              examples:
                example-1:
                  value:
                    API_TOKEN: oaeuaouaouaoeuuao
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - CLIENT_SECRET: []
        - CLIENT_ID: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  $ref: '#/components/schemas/UserSign'
            examples:
              example-1:
                value:
                  user:
                    id: '1'
                    pass: arsocehucrsaochuras
          application/xml:
            schema:
              type: object
              properties: {}
          multipart/form-data:
            schema:
              type: object
              properties: {}
          text/html:
            schema:
              type: object
              properties: {}
          text/plain:
            schema:
              type: object
              properties: {}
          application/EDI-X12:
            schema:
              type: object
              properties: {}
          application/EDIFACT:
            schema:
              type: object
              properties: {}
          application/atom+xml:
            schema:
              type: object
              properties: {}
          application/font-woff:
            schema:
              type: object
              properties: {}
          application/gzip:
            schema:
              type: object
              properties: {}
        description: ''
      parameters: []
      description: サインアップ時に得られたuserid/passを利用して、他のAPI呼び出しに必要なAPI_TOKEN（有効期限付き）を得る。
      tags:
        - user
    parameters: []
components:
  schemas:
    QaMessage:
      title: QaMessage
      type: object
      x-examples:
        example-1:
          id: string
          content: string
          created_at: string
          upload_image_url: string
      description: 相談返答
      properties:
        id:
          type: string
          example: '1'
        content:
          type: string
          example: 相談内容
        created_at:
          type: string
          format: date-time
        upload_image_url:
          type: string
          format: uri
          example: 'https://doctorsme-production.s3.amazonaws.com/contents/contents/theme/thum_6555_1583732503623.png'
        author_type:
          type: string
          enum:
            - user
            - expert
      required:
        - id
        - content
        - created_at
        - upload_image_url
        - author_type
    Qa:
      title: QA
      type: object
      description: 相談内容（簡易）
      properties:
        id:
          type: string
          description: QAのID
          example: '1'
        created_at:
          type: string
          format: date-time
          description: QA作成日時
        expert_category:
          type: string
          description: 専門家のカテゴリー
          enum:
            - doctor
            - chemist
            - dietitian
            - dentist
            - pet
        expert:
          $ref: '#/components/schemas/Expert'
        user:
          $ref: '#/components/schemas/User'
        status:
          type: string
          description: |-
            10:質問開始
            20:回答中
            22:回答済み
            30:再質問
            40:質問終了
            41:スタッフによる終了
          enum:
            - '10'
            - '20'
            - '22'
            - '30'
            - '40'
            - '41'
        first_qa_message:
          $ref: '#/components/schemas/QaMessage'
      required:
        - id
        - created_at
        - expert_category
        - expert
        - user
        - status
        - first_qa_message
    Expert:
      title: Expert
      type: object
      description: 専門家
      properties:
        id:
          type: string
          description: 専門家ID
          example: '1'
        nick_name:
          type: string
          description: 専門家のニックネーム
          example: ドクターズミー専門家
        icon_url:
          type: string
          description: 専門家のアイコンURL
          format: uri
          example: 'https://doctors-me.com/assets/media/icon-dietitian-69c409691f60651d21f5220c69b79bc68f0743d87086666ab2b67448929554c7.png'
        expert_category:
          type: string
          description: 専門家のカテゴリー
          enum:
            - doctor
            - chemist
            - dietitian
            - dentist
            - pet
      required:
        - id
        - nick_name
        - icon_url
        - expert_category
    QaDetail:
      title: QaDetail
      type: object
      description: 相談内容（詳細）
      properties:
        id:
          type: string
          example: '1'
        created_at:
          type: string
          format: date-time
        expert_category:
          type: string
          description: 専門家のカテゴリー
          enum:
            - doctor
            - chemist
            - dietitian
            - dentist
            - pet
        expert:
          $ref: '#/components/schemas/Expert'
        qa_message_list:
          type: array
          items:
            $ref: '#/components/schemas/QaMessage'
        user:
          $ref: '#/components/schemas/User'
        status:
          type: string
          enum:
            - '10'
            - '20'
            - '22'
            - '30'
            - '40'
            - '41'
          description: |-
            10:質問開始
            20:回答中
            22:回答済み
            30:再質問
            40:質問終了
            41:スタッフによる終了
      required:
        - id
        - created_at
        - expert_category
        - expert
        - qa_message_list
        - user
        - status
    Error:
      title: Error
      type: object
      description: エラー
      x-examples:
        Unauthorized:
          message: CLIENT_ID/CLIENT_SECRETの値が正しくありません。
          code: '1000'
          status: '401'
      properties:
        message:
          type: string
          description: エラーメッセージ
          example: 認証エラーです
        code:
          type: string
          description: エラーの内容に対応したコード
          example: '1000'
        status:
          type: string
          description: HTTPステータスコード
          enum:
            - '200'
            - '404'
            - '400'
            - '401'
            - '500'
          example: '401'
      required:
        - message
        - code
        - status
    User:
      title: User
      type: object
      properties:
        id:
          type: string
          example: '1'
      required:
        - id
    UserSign:
      title: UserSign
      type: object
      properties:
        id:
          type: string
          description: ''
          example: '1'
        pass:
          type: string
          example: arsocehucrsaochuras
      required:
        - pass
  securitySchemes:
    CLIENT_SECRET:
      name: CLIENT_SECRET
      type: apiKey
      in: header
    CLIENT_ID:
      name: CLIENT_ID
      type: apiKey
      in: header
    API_TOKEN:
      name: API_TOKEN
      type: apiKey
      in: header
tags:
  - name: qa
  - name: user
security:
  - CLIENT_SECRET: []
  - CLIENT_ID: []
