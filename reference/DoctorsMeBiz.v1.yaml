openapi: 3.0.0
info:
  title: DoctorsMeBizAPI
  version: '`'
  contact:
    name: アドメディカ
    url: 'http://ad-medi.com/'
    email: dmadmin@ad-medi.com
  termsOfService: 'http://ad-medi.com/'
  description: DoctorsMeの専門家に対して医療相談を行うためのAPIです。
servers:
  - url: 'http://localhost:3000/v1'
    description: localhost
  - description: staging
    url: 'http://localhost:3000/v1'
paths:
  /qa:
    post:
      summary: 相談投稿
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  eueuuuu:
                    type: string
      operationId: post-qa-post
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                qa_id:
                  type: string
                content:
                  type: string
                expert_category:
                  type: string
                user_id:
                  type: string
          application/xml:
            schema:
              type: object
              properties: {}
        description: ''
      description: 相談を投稿する
    parameters: []
    get:
      summary: 相談詳細取得
      operationId: get-qa
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QaDetail'
      security:
        - API_TOKEN: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                qa_id:
                  type: string
            examples:
              example-1:
                value:
                  qa_id: string
      description: 特定の相談内容を取得する。
      tags:
        - qa
  /qa/list:
    parameters: []
    get:
      summary: 相談履歴取得
      operationId: get-qa-list
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  qa_list:
                    type: array
                    items:
                      $ref: '#/components/schemas/Qa'
      security:
        - API_TOKEN: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
      description: 特定ユーザーの相談内容をすべて取得する。
      tags:
        - qa
  /user/signup:
    parameters: []
    post:
      summary: ユーザーサインアップ
      operationId: post-user-register
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_id:
                    type: string
      description: ユーザーを登録して、user_idを得る。
      parameters: []
      security:
        - CLIENT_SECRET: []
        - CLIENT_ID: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                client_user_id:
                  type: string
                  description: goo_id
      tags:
        - user
  /user/signin:
    post:
      summary: ユーザーサインイン
      operationId: post-user-login
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  API_TOKEN:
                    type: string
                  client_user_id:
                    type: string
      security:
        - CLIENT_SECRET: []
        - CLIENT_ID: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
          application/xml:
            schema:
              type: object
              properties: {}
          multipart/form-data:
            schema:
              type: object
              properties: {}
          text/html:
            schema:
              type: object
              properties: {}
          text/plain:
            schema:
              type: object
              properties: {}
          application/EDI-X12:
            schema:
              type: object
              properties: {}
          application/EDIFACT:
            schema:
              type: object
              properties: {}
          application/atom+xml:
            schema:
              type: object
              properties: {}
          application/font-woff:
            schema:
              type: object
              properties: {}
          application/gzip:
            schema:
              type: object
              properties: {}
        description: ''
      parameters: []
      description: user_idを利用して、他のAPI呼び出しに必要なAPI_TOKENを得る。
      tags:
        - user
    parameters: []
components:
  schemas:
    QaRes:
      title: QaRes
      type: object
      x-examples:
        example-1:
          id: string
          content: string
          created: string
          upload_image_url: string
      properties:
        id:
          type: string
        content:
          type: string
        created:
          type: string
        upload_image_url:
          type: string
        author_type:
          type: string
      description: 相談返答
    Qa:
      title: QA
      type: object
      properties:
        id:
          type: string
        created:
          type: string
        expert_category:
          type: string
        expert:
          $ref: '#/components/schemas/Expert'
        user_id:
          type: string
        status:
          type: string
          description: |2





































































































































              #     START(10, "質問開始"), READY(20, "回答中"), STOP(21, "回答保留"), ANSWER(22, "回答済み"), AGAIN(30, "再質問"), FINISH(40, "質問終了"), FINISH_STAFF(
              #         41, "質問終了(スタッフ)"),;
        first_qa_res:
          $ref: '#/components/schemas/QaRes'
      description: 相談内容（簡易）
    Expert:
      title: Expert
      type: object
      properties:
        id:
          type: string
        nick_name:
          type: string
        icon_url:
          type: string
        expert_category:
          type: string
          description: |2





































































































































                  when "chemist" then return "薬剤師"
                  when "doctor" then return "医師"
                  when "dietitian" then return "栄養士"
                  when "dentist" then return "歯科医"
                  when "pet" then return "獣医師"
      description: 専門家
    QaDetail:
      title: QaDetail
      type: object
      properties:
        id:
          type: string
        created:
          type: string
        expert_category:
          type: string
        expert:
          $ref: '#/components/schemas/Expert'
        qa_res_list:
          type: array
          items:
            $ref: '#/components/schemas/QaRes'
        user_id:
          type: string
        status:
          type: string
          description: |+

      description: 相談内容（詳細）
  securitySchemes:
    CLIENT_SECRET:
      name: CLIENT_SECRET
      type: apiKey
      in: header
    CLIENT_ID:
      name: CLIENT_ID
      type: apiKey
      in: header
    API_TOKEN:
      name: API_TOKEN
      type: apiKey
      in: header
tags:
  - name: qa
  - name: user
